{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueDnsName": {
            "type": "string",
            "metadata": {
                "description": "Relative DNS name for the traffic manager profile, resulting FQDN will be <uniqueDnsName>.trafficmanager.net, must be globally unique."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machines."
            }
        },
        "uniqueDnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Relative DNS Name for the Public IPs used to access the Virtual Machines, must be globally unique.  An index will be appended for each instance."
            }
        },
        "vmSize": {
      "allowedValues": [
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A3_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_D1_v2",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_DS1_v2",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2"
      ],
            "type": "string",
            "metadata": {
                "description": "Size of the VMs to be created"
            }
        },
        "numVMs": {
            "type": "string",
            "defaultValue": "3",
            "allowedValues": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
           ],
            "metadata": {
                "description": "The number of VMs to deploy for use with the Traffic Manager, max is 6."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "14.04.2-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.2-LTS",
                "15.10"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 12.04.5-LTS, 14.04.2-LTS, 15.10."
            }
        }
    },
    "variables": {
        "numVMs": "[int(parameters('numVMs'))]",
        "ipApiVersion": "2016-11-01",
        "nrpApiVersion": "2016-10-01",
        "tmApiVersion": "2015-11-01",
        "computeResouresApiVersion" : "2016-04-30-preview",
        "imagePublisher": "Canonical",
        "imageOffer": "ubuntuServer",
        "nicName": "myVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressName": "myPublicIP",
        "publicIPAddressType": "Dynamic",
        "tmProfileName": "myTrafficManagerProfile",
        "vmName": "myUbuntuVM",
        "virtualNetworkName": "myVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
    },

    "resources": [
        {
            "apiVersion": "[variables('ipApiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "ipLoop",
                "count": "[variables('numVMs')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('uniqueDnsNameForPublicIP'), copyindex())]"
                }
            }
        },
        {
            "apiVersion": "[variables('nrpApiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('nrpApiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "copy": {
                "name": "nicLoop",
                "count": "[variables('numVMs')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('computeResouresApiVersion')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'), copyIndex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('numVMs')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "[variables('computeResouresApiVersion')]",
            "location": "[resourceGroup().location]",
            "name": "[concat(variables('vmName'), copyIndex(), '/installcustomscript')]",
            "copy": {
                "name": "extLoop",
                "count": "[variables('numVMs')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "commandToExecute": "sudo bash -c 'apt-get update && apt-get -y install apache2' "
                }
            }
        },
        {
            "apiVersion": "[variables('tmApiVersion')]",
            "type": "Microsoft.Network/trafficManagerProfiles",
            "location": "global",
            "name": "[variables('tmProfileName')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '0')]"
            ],
            "properties": {
                "profileStatus": "Enabled",
                "trafficRoutingMethod": "Weighted",
                "dnsConfig": {
                    "relativeName": "[parameters('uniqueDnsName')]",
                    "ttl": 30
                },
                "monitorConfig": {
                    "protocol": "HTTP",
                    "port": 80,
                    "path": "/"
                }
            }
        },
        {
            "apiVersion": "[variables('tmApiVersion')]",
            "type": "Microsoft.Network/trafficManagerProfiles/azureEndpoints",
            "dependsOn": [
                "[concat('Microsoft.Network/trafficManagerProfiles/', variables('tmProfileName'))]"
            ],
            "location": "global",
            "name": "[concat(variables('tmProfileName'),'/Endpoint', copyIndex())]",
            "copy": {
                "name": "endpointLoop",
                "count": "[variables('numVMs')]"
            },
            "properties": {
                "targetResourceId": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'), copyIndex()))]",
                "endpointStatus": "Enabled",
                "weight": 1

            }
        }
    ]
}
